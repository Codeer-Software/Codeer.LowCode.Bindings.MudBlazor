@using Codeer.LowCode.Blazor.Repository.Design
@using Codeer.LowCode.Blazor.OperatingModel
@using Codeer.LowCode.Blazor.Utils
@using Microsoft.AspNetCore.Components.Web
@inherits MudFieldComponentBase<RadioButtonField, MudRadioButtonFieldDesign>

@if (Field.ModuleLayoutType == ModuleLayoutType.List && Field.IsViewOnly) {
  <span class="d-block py-2">
    @Field.Value
  </span>
} else {
  <MudRadioGroup Disabled="@(IsDisabled || IsViewMode)" @bind-Value:get="@IsChecked" @bind-Value:set="OnChange" Error="!Field.IsValid">
    <MudRadio T="bool" Value="true" Color="MudDesign.Color" >@Label</MudRadio>
  </MudRadioGroup>
}

@code {
  private bool IsDisabled => Field.IsEnabled == false;
  private bool IsViewMode => Field.IsViewOnly;
  private string Label => Field.Design.Text;
  private bool? _tempValue;

  private bool IsChecked {
    get {
      if (_tempValue != null) {
        var ret = _tempValue;
        _tempValue = null;
        return ret == true;
      }

      return Field.Value;
    }
  }

  private async void OnChange(bool value) {
    if (value == false) return;
    await Field.SetCheckAsync();
  }

}