@using Codeer.LowCode.Bindings.MudBlazor.Internal
@using Codeer.LowCode.Blazor.OperatingModel
@using Codeer.LowCode.Bindings.MudBlazor.Internal.Components
@inherits MudFieldComponentBase<TimeField, MudTimeFieldDesign>

@if (IsViewMode) {
  <span class="d-block py-2">@GetViewOnlyValue()</span>
} else {
  <InternalMudTimePicker @bind-Value:get="@GetValue()" @bind-Value:set="@RaiseOnValueChanged" AssumeLocal="@(!Field.Design.SaveAsUtc)"
                         InputId="@WebElementId" Disabled="@IsDisabled" ReadOnly="IsViewMode" Variant="MudDesign.Variant"
                         Error="!Field.IsValid" ErrorText="@(Field.ErrorText)" StandardInput="MudDesign.StandardInput"/>
}

@code {

  private bool IsDisabled => Field.IsEnabled == false;
  private bool IsViewMode => Field.IsViewOnly;

  private TimeOnly? GetValue() => Field.Value;

  private async Task RaiseOnValueChanged(TimeOnly? value) {
    await Field.SetValueAsync(value);
  }

  private string GetViewOnlyValue() => (Field.Design.SaveAsUtc ? DateTimeHelper.ToLocalTime(GetValue()) : GetValue())?.ToString("HH:mm:ss") ?? "";

}