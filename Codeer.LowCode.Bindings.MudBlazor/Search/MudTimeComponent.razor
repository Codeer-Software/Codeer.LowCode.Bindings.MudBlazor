@using Codeer.LowCode.Blazor.OperatingModel
@using Codeer.LowCode.Bindings.MudBlazor.Internal.Components
@inherits MudFieldComponentBase<TimeField, MudTimeFieldDesign>

<div class="d-flex align-items-center">
  <InternalMudTimePicker @bind-Value:get="@MoreThanValue" @bind-Value:set="@OnMoreThanChanged"
                         Variant="MudDesign.Variant" Color="MudDesign.Color" StandardInput="MudDesign.StandardInput"
                         AssumeLocal="!Field.Design.SaveAsUtc" data-search-target="min"/>
  <span>ï½ž</span>
  <InternalMudTimePicker @bind-Value:get="@LessThanValue" @bind-Value:set="@OnLessThanChanged"
                         Variant="MudDesign.Variant" Color="MudDesign.Color" StandardInput="MudDesign.StandardInput"
                         AssumeLocal="!Field.Design.SaveAsUtc" data-search-target="max"/>
</div>

@code {

  private TimeOnly? LessThanValue => Field.SearchMax;
  private TimeOnly? MoreThanValue => Field.SearchMin;

  private async Task OnMoreThanChanged(TimeOnly? value) {
    await Field.SetSearchMinAsync(value);
  }

  private async Task OnLessThanChanged(TimeOnly? value) {
    await Field.SetSearchMaxAsync(value);
  }

}